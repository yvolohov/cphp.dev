<?php

namespace Lessons\L_03_12;

/* 3.12 Регулярные выражения */
function regularExpressions()
{
    /* preg_match проверяет строку на соответствие шаблону. Возвращает 1,
     * если строка соответсвует, 0 - если нет, False в случае ошибки. */

    /* Данному паттерну соответсвует любая комбинация символов a, b и c в количестве от 1 до 3 */
    $r1 = preg_match('/^[abc]{1,3}$/', 'abc'); // для задания границ паттерна используем символы /
    $r2 = preg_match('#^[abc]{1,3}$#', 'bbb'); // также подходят символы #
    $r3 = preg_match('!^[abc]{1,3}$!', 'cc');  // также подходят символы !
    $r4 = preg_match('~^[abc]{1,3}$~', 'cab'); // также подходят символы ~

    echo "r1 = {$r1}; r2 = {$r2}; r3 = {$r3}; r4 = {$r4};", PHP_EOL;

    /* Данному паттерну соответсвует любая комбинация символов A-z в количестве от 0 до 5 */
    $r1 = preg_match('/^[A-z]{0,5}$/', 'zzzz'); // Для указания начала и конца строки используем символы ^ и $
    $r2 = preg_match('/\A[A-z]{0,5}\Z/', 'zzzz'); // Для указния начала и конца строки можно также использовать \A и \Z

    echo "r1 = {$r1}; r2 = {$r2};", PHP_EOL;

    /* preg_match_all выполняет глобальный поиск шаблона в строке. Возвращает количество вхождений
     * шаблона в строку. Первый параметр функции - шаблон, второй - строка, третий - массив найденных
     * значений, четвертый - параметры, которые определяют информацию в массиве */
    $matches = []; // Этот массив будет содержавть найденные совпадения
    $r1 = preg_match_all('/de/', 'abdefabcdef', $matches, PREG_OFFSET_CAPTURE);
    echo "r1 = {$r1};", PHP_EOL;
    echo print_r($matches, True), PHP_EOL;

    /* preg_replace выполняет поиск по шаблону и замену подстроки в строке. Возвращает
     * модифицированную строку. */
    $r1 = preg_replace('/de/', 'DE', 'abcdefabcdef');
    echo "r1 = {$r1};", PHP_EOL;

    /* Квантификатор * означает повторение символа от 0 до бесконечности */
    $r1 = preg_match('/^a*$/', 'aaaaaa');

    /* Квантификатор + означает повторение символа от 1 до бесконечности */
    $r2 = preg_match('/^b+$/', 'bbbbbb');

    /* Квантификатор ? означает повторение символа 0 или 1 раз */
    $r3 = preg_match('/^с?$/', 'с');

    /* Символ . означает любой символ */
    $r4 = preg_match('/^...$/', 'abc');

    /* Круглые скобки () означают подшаблон, могут использоватся
     * для группировки символов в единую последовательность, к которой затем
     * применяются квантификаторы */
    $r5 = preg_match('/^(doc)+$/', 'docdocdoc');

    echo "r1 = {$r1}; r2 = {$r2}; r3 = {$r3}; r4 = {$r4}; r5 = {$r5};", PHP_EOL;
}