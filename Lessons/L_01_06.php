<?php

namespace Lessons\L_01_06;

/* 1.6 Операторы присваивания - +=, -=, *=, /= ...
 * и т. д. А также конкатенация, инкремент и декремент. */
function assignmentOperators()
{
    // Приваивание и арифметические операции
    $add = 10; $sub = 10; $mul = 10; $div = 10; $rest = 10;
    $add += 2; // 12
    $sub -= 3; // 7
    $mul *= 2; // 20
    $div /= 4; // 2.5
    $rest %= 3; // 1
    echo "add = {$add}; sub = {$sub}; mul = {$mul}; div = {$div}; rest = {$rest};\n";

    // Присваивание и побитовые операции
    $and = bindec('1100');
    $and &= bindec('1010');
    $and = decbin($and); // 1000

    $or = bindec('1100');
    $or |= bindec('1010');
    $or = decbin($or); // 1110

    $xor = bindec('1100');
    $xor ^= bindec('1010');
    $xor = decbin($xor); // 0110

    $lshift = bindec('11111111');
    $lshift <<= 2;
    $lshift = decbin($lshift); // 1111111100

    $rshift = bindec('11111111');
    $rshift >>= 2;
    $rshift = decbin($rshift); // 111111

    echo "and = {$and}; or = {$or}; xor = {$xor}; lshift = {$lshift}; rshift = {$rshift};\n";

    // Присваивание и строковые операции
    $str = 'Hello ';
    $str .= ' world';
    echo "str = {$str};\n";

    // Присваивание элементов массива (оператор стрелка)
    $a = ['a' => 1, 'b' => 2];
    echo print_r($a, True), PHP_EOL;

    /* Инкремент ++ увеличивает значение на единицу
     * Декремент -- уменьшает значение на единицу
     * Здесь показан постинкремент и постдекремент */
    $n1 = 1;
    $n2 = 3;
    $n1++; // 2
    $n2--; // 2

    /* Разница между пре и постинкрементом (декрементом) в том
     * что пре***ремент изменяет значение а затем возвращает
     * а пос***ремент возвращает значение а затем изменяет.  */
    $x3 = 4;
    $x4 = 4;
    $n3 = ++$x3 * 2; // (4 + 1) * 2 = 10, здесь переменная x3 увеличит значение до 5 а затем выполнятся остальные рассчеты
    $n4 = $x4++ * 2; // 4 * 2 =, 8 здесь переменная x4 будет использована в рассчетах как есть, и лишь после их выполнения будет увеличена

    echo "n1 = {$n1}; n2 = {$n2}; n3 = {$n3}; n4 = {$n4};\n";
}